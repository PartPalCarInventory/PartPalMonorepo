version: '3.8'

services:
  postgres:
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD_STAGING}
    volumes:
      - postgres_staging_data:/var/lib/postgresql/data

  redis:
    volumes:
      - redis_staging_data:/data

  api:
    image: ghcr.io/partpal/partpal-api:develop
    environment:
      NODE_ENV: staging
      DATABASE_URL: postgresql://partpal:${POSTGRES_PASSWORD_STAGING}@postgres:5432/partpal
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET_STAGING}
      CLOUDINARY_CLOUD_NAME: ${CLOUDINARY_CLOUD_NAME_STAGING}
      CLOUDINARY_API_KEY: ${CLOUDINARY_API_KEY_STAGING}
      CLOUDINARY_API_SECRET: ${CLOUDINARY_API_SECRET_STAGING}
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  ims:
    image: ghcr.io/partpal/partpal-ims:develop
    environment:
      NODE_ENV: staging
      NEXT_PUBLIC_API_URL: https://api-staging.partpal.co.za
      NEXT_PUBLIC_APP_URL: https://ims-staging.partpal.co.za
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  marketplace:
    image: ghcr.io/partpal/partpal-marketplace:develop
    environment:
      NODE_ENV: staging
      NEXT_PUBLIC_API_URL: https://api-staging.partpal.co.za
      NEXT_PUBLIC_APP_URL: https://staging.partpal.co.za
      NEXT_PUBLIC_MAPBOX_TOKEN: ${NEXT_PUBLIC_MAPBOX_TOKEN_STAGING}
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  nginx:
    profiles: []  # Always include nginx in staging
    volumes:
      - ./infrastructure/nginx/staging.conf:/etc/nginx/nginx.conf
      - ./infrastructure/nginx/ssl-staging:/etc/nginx/ssl

volumes:
  postgres_staging_data:
  redis_staging_data: