version: '3.8'

services:
  # Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: partpal
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-partpal_dev}
      POSTGRES_DB: partpal
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./services/database/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U partpal"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # API Service
  api:
    build:
      context: .
      dockerfile: services/api/Dockerfile
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      DATABASE_URL: postgresql://partpal:${POSTGRES_PASSWORD:-partpal_dev}@postgres:5432/partpal
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET}
      CLOUDINARY_CLOUD_NAME: ${CLOUDINARY_CLOUD_NAME}
      CLOUDINARY_API_KEY: ${CLOUDINARY_API_KEY}
      CLOUDINARY_API_SECRET: ${CLOUDINARY_API_SECRET}
    ports:
      - "3333:3333"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./services/api:/app/services/api
      - ./packages:/app/packages
      - /app/node_modules
    command: npm run dev

  # IMS Application
  ims:
    build:
      context: .
      dockerfile: apps/ims/Dockerfile
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:3333}
      NEXT_PUBLIC_APP_URL: ${NEXT_PUBLIC_IMS_URL:-http://localhost:3001}
    ports:
      - "3001:3001"
    depends_on:
      - api
    volumes:
      - ./apps/ims:/app/apps/ims
      - ./packages:/app/packages
      - /app/node_modules
    command: npm run dev

  # Marketplace Application
  marketplace:
    build:
      context: .
      dockerfile: apps/marketplace/Dockerfile
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:3333}
      NEXT_PUBLIC_APP_URL: ${NEXT_PUBLIC_MARKETPLACE_URL:-http://localhost:3000}
      NEXT_PUBLIC_MAPBOX_TOKEN: ${NEXT_PUBLIC_MAPBOX_TOKEN}
    ports:
      - "3000:3000"
    depends_on:
      - api
    volumes:
      - ./apps/marketplace:/app/apps/marketplace
      - ./packages:/app/packages
      - /app/node_modules
    command: npm run dev

  # Nginx for production
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./infrastructure/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./infrastructure/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - ims
      - marketplace
      - api
    profiles:
      - production

volumes:
  postgres_data:
  redis_data: